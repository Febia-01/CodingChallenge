Rotate List -> Leetcode 61

Illustration:
head = [1,2,3,4,5] 
k = 2
We have to rotate the list to the right twice.
ans = [4,5,1,2,3]

Brute force solution:
if (head == null || head.next == null) return head;
for (int i = 0; i < k; i++) {
  Node temp = head;
  while (temp.next.next != null) temp = temp.next;
  Node end = temp.next;
  temp.next = null;
  end.next = head;
  head = end;
}
return head;

Optimal solution:
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null||head.next == null||k == 0) return head;
        ListNode temp = head;
        int length = 1;
        while(temp.next != null) {
            ++length;
            temp = temp.next;
        }
        temp.next = head;
        k = k%length; 
        int end = length-k; 
        while(end--!=0) temp = temp.next;
        head = temp.next;
        temp.next = null;
            
        return head;
    }
}
