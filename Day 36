Trapping Rain Water -> Leetcode 42

Illustration:
height = [0,1,0,2,1,0,1,3,2,1,2,1]
The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
ans: 6

Brute force solution:
T.C -> O(n^2), S.C -> O(1)
int n = height.length;
int waterTrapped = 0;
for (int i = 0; i < n; i++) {
    int j = i;
    int leftMax = 0, rightMax = 0;
    while (j >= 0) {
        leftMax = Math.max(leftMax, height[j]);
        j--;
    }
    j = i;
    while (j < n) {
        rightMax = Math.max(rightMax, height[j]);
        j++;
    }
    waterTrapped += Math.min(leftMax, rightMax) - height[i];
}
return waterTrapped;

Better solution:
T.C -> O(3n), S.C -> O(n)
int n = height.length;
int prefix[] = new int[n];
int suffix[] = new int[n];
prefix[0] = height[0];
for (int i = 1; i < n; i++) {
    prefix[i] = Math.max(prefix[i - 1], height[i]);
}
suffix[n - 1] = height[n - 1];
for (int i = n - 2; i >= 0; i--) {
    suffix[i] = Math.max(suffix[i + 1], height[i]);
}
int waterTrapped = 0;
for (int i = 0; i < n; i++) {
    waterTrapped += Math.min(prefix[i], suffix[i]) - height[i];
}
return waterTrapped;

