Middle of the Linked List -> Leetcode 876

Bruteforce approach:

public ListNode middleNode(ListNode head) {

        if (head == null || head.next == null) {
            return head;
        }

        ListNode temp = head;
        int count = 0;

        while (temp != null) {
            count++;
            temp = temp.next;
        }

        int mid = count / 2 + 1;
        temp = head;

        while (temp != null) {
            mid = mid - 1;

            if (mid == 0){
                break;
            }
            temp = temp.next;
        }

        return temp;
}

Optimal solution:

class Solution {
    public ListNode middleNode(ListNode head) {

        ListNode slow = head; 
        ListNode fast = head;   

        while (fast != null && fast.next != null && slow != null) {
            
            fast = fast.next.next;  
            slow = slow.next;        
        
        }

        return slow;
        
    }
}
