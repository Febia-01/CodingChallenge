Diameter of Binary Tree -> Leetcode 543

Illustration:
root = [1,2,3,4,5]
3 is the length of the path [4,2,1,3] or [5,2,1,3].
Output: 3

Brute force Solution:
T.C -> O(n^2), S.C -> O(1)
int diameter = 0;
public int diameterOfBinaryTree(TreeNode root) {
    calculateHeight(root);
    return diameter;
}
public int calculateHeight(TreeNode node) {
    if (node == null) {
        return 0;
    }
    int leftHeight = calculateHeight(node.left);
    int rightHeight = calculateHeight(node.right);
    diameter = Math.max(diameter, leftHeight + rightHeight);
    return 1 + Math.max(leftHeight, rightHeight);
}

Optimal solution:
T.C -> O(n), S.C -> O(1)
class Solution {
    int diameter = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        int[] diameter = new int[1];
        diameter[0] = 0;
        height(root, diameter);
        return diameter[0];
    }
    private int height(TreeNode node, int[] diameter) {
        if (node == null) {
            return 0;
        }
        int[] lh = new int[1];
        int[] rh = new int[1];
        lh[0] = height(node.left, diameter);
        rh[0] = height(node.right, diameter);
        diameter[0] = Math.max(diameter[0], lh[0] + rh[0]);
        return 1 + Math.max(lh[0], rh[0]);
    }
}
