Online Stock Span -> Leetcode 901

Illustration:
Input
["StockSpanner", "next", "next", "next", "next", "next", "next", "next"]
[[], [100], [80], [60], [70], [60], [75], [85]]
StockSpanner stockSpanner = new StockSpanner();
stockSpanner.next(100); // return 1
stockSpanner.next(80);  // return 1
stockSpanner.next(60);  // return 1
stockSpanner.next(70);  // return 2
stockSpanner.next(60);  // return 1
stockSpanner.next(75);  // return 4, because the last 4 prices (including today's price of 75) were less than or equal to today's price.
stockSpanner.next(85);  // return 6
Output
[null, 1, 1, 1, 2, 1, 4, 6]

Solution:
class StockSpanner {

    public StockSpanner() {
        
    }
    
    public int next(int price) {
        int span = 1;
        while (!stack.isEmpty() && stack.peek().getKey() <= price)
        span += stack.pop().getValue();
        stack.push(new Pair<>(price, span));
        return span;
    }
    private Stack<Pair<Integer, Integer>> stack = new Stack<>();
}
