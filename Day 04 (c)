Merge Intervals -> Leetcode 56

Illustration:
intervals = [[1,3],[2,6],[8,10],[15,18]]
Here the intervals [1,3] and [2,6] are overlapping
So, merge it, [1,6]
ans = [[1,6],[8,10],[15,18]]

Solution:
- intervals has to be sorted in ascending order
- start and end, two variables should be initialized with the first intervals values.
- iterate through the intervals, if current interval doesn't overlap with the previous one, add the previous interval to the merged list and update start and end. If it overlaps extend the end to the maximum value.
- The list should be converted to 2D array and return

class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));

        List<int[]> merged = new ArrayList<>();
        
        int start = intervals[0][0];
        int end = intervals[0][1];

        for (int i = 1; i < intervals.length; i++) {
            if (end < intervals[i][0]) {
                merged.add(new int[]{start, end});
                start = intervals[i][0];
                end = intervals[i][1];
            } else {
                end = Math.max(end, intervals[i][1]);
            }
        }
        merged.add(new int[]{start, end});
        int[][] result = merged.toArray(new int[merged.size()][]);

        return result;
    }
}
