Linked List Cycle -> Leetcode 

Illustration:
Input: head = [3,2,0,-4], pos = 1
There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).
Ans: true

Brute force solution:
T.C -> O(N * 2 * log(N)), S.C -> O(N) 
ListNode temp = head;
HashMap<ListNode, Integer> nodeMap = new HashMap<>();
while (temp != null) {
    if (nodeMap.containsKey(temp)) {
        return true;
    }
    nodeMap.put(temp, 1);
    temp = temp.next;
}
return false;

